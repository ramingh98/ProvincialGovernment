// <auto-generated />
using System;
using DataAccessLayer.ApplicationDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(MainDBContext))]
    [Migration("20230802170752_20230802-2037")]
    partial class _202308022037
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataModels.Models.CaseHistoryModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CaseNumber")
                        .HasColumnType("bigint");

                    b.Property<long>("CaseStatusId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CaseStatusId");

                    b.HasIndex("Id");

                    b.ToTable("CaseHistory", (string)null);
                });

            modelBuilder.Entity("DataModels.Models.CaseStatusModel", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TitleEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("CaseStatus", (string)null);
                });

            modelBuilder.Entity("DataModels.Models.EducationDegreeModel", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("EducationDegree", (string)null);
                });

            modelBuilder.Entity("DataModels.Models.MaritalStatusModel", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TitleEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("MaritalStatus", (string)null);
                });

            modelBuilder.Entity("DataModels.Models.PersonnelsModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("BirthCertificateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("CaseNumber")
                        .HasColumnType("bigint");

                    b.Property<long>("CaseStatusId")
                        .HasColumnType("bigint");

                    b.Property<string>("ComputerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("EducationDegreeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LastPositionId")
                        .HasColumnType("bigint");

                    b.Property<long>("MaritalStatusId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PlaceOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("datetime");

                    b.Property<long>("ServiceLocationId")
                        .HasColumnType("bigint");

                    b.Property<long>("StudyFieldId")
                        .HasColumnType("bigint");

                    b.Property<long>("TypeOfEmploymentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CaseStatusId");

                    b.HasIndex("EducationDegreeId");

                    b.HasIndex("LastPositionId");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("NationalCode")
                        .IsUnique();

                    b.HasIndex("ServiceLocationId");

                    b.HasIndex("StudyFieldId");

                    b.HasIndex("TypeOfEmploymentId");

                    b.ToTable("Personnels", (string)null);
                });

            modelBuilder.Entity("DataModels.Models.ServiceLocationModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("ServiceLocation", (string)null);
                });

            modelBuilder.Entity("DataModels.Models.StudyFieldModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("StudyField", (string)null);
                });

            modelBuilder.Entity("DataModels.Models.TypeOfEmploymentModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("TypeOfEmployment", (string)null);
                });

            modelBuilder.Entity("DataModels.Models.TypeOfPositionModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("TypeOfPosition", (string)null);
                });

            modelBuilder.Entity("DataModels.Models.UsersModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("DataModels.Models.CaseHistoryModel", b =>
                {
                    b.HasOne("DataModels.Models.CaseStatusModel", "CaseStatus")
                        .WithMany("CaseHistories")
                        .HasForeignKey("CaseStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CaseStatus");
                });

            modelBuilder.Entity("DataModels.Models.PersonnelsModel", b =>
                {
                    b.HasOne("DataModels.Models.CaseStatusModel", "CaseStatus")
                        .WithMany("Personnels")
                        .HasForeignKey("CaseStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DataModels.Models.EducationDegreeModel", "EducationDegree")
                        .WithMany("Personnels")
                        .HasForeignKey("EducationDegreeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DataModels.Models.TypeOfPositionModel", "TypeOfPosition")
                        .WithMany("Personnels")
                        .HasForeignKey("LastPositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DataModels.Models.MaritalStatusModel", "MaritalStatus")
                        .WithMany("Personnels")
                        .HasForeignKey("MaritalStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DataModels.Models.ServiceLocationModel", "ServiceLocation")
                        .WithMany("Personnels")
                        .HasForeignKey("ServiceLocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DataModels.Models.StudyFieldModel", "StudyField")
                        .WithMany("Personnels")
                        .HasForeignKey("StudyFieldId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DataModels.Models.TypeOfEmploymentModel", "TypeOfEmployment")
                        .WithMany("Personnels")
                        .HasForeignKey("TypeOfEmploymentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CaseStatus");

                    b.Navigation("EducationDegree");

                    b.Navigation("MaritalStatus");

                    b.Navigation("ServiceLocation");

                    b.Navigation("StudyField");

                    b.Navigation("TypeOfEmployment");

                    b.Navigation("TypeOfPosition");
                });

            modelBuilder.Entity("DataModels.Models.CaseStatusModel", b =>
                {
                    b.Navigation("CaseHistories");

                    b.Navigation("Personnels");
                });

            modelBuilder.Entity("DataModels.Models.EducationDegreeModel", b =>
                {
                    b.Navigation("Personnels");
                });

            modelBuilder.Entity("DataModels.Models.MaritalStatusModel", b =>
                {
                    b.Navigation("Personnels");
                });

            modelBuilder.Entity("DataModels.Models.ServiceLocationModel", b =>
                {
                    b.Navigation("Personnels");
                });

            modelBuilder.Entity("DataModels.Models.StudyFieldModel", b =>
                {
                    b.Navigation("Personnels");
                });

            modelBuilder.Entity("DataModels.Models.TypeOfEmploymentModel", b =>
                {
                    b.Navigation("Personnels");
                });

            modelBuilder.Entity("DataModels.Models.TypeOfPositionModel", b =>
                {
                    b.Navigation("Personnels");
                });
#pragma warning restore 612, 618
        }
    }
}
